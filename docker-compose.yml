version: "3"

services:

  # kerberos:
  #   image: salimelakoui/security-kerberos:latest-salim
  #   container_name: kerberos
  #   networks:
  #     - dp-network
  #   volumes:
  #     - server-keytab-2:/var/keytabs

  namenode:
    image: salimelakoui/hadoop-namenode:latest-salim
    container_name: namenode
    networks:
      - dp-network
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env

  datanode-1:
    image: salimelakoui/hadoop-datanode:latest-salim
    depends_on: 
      - namenode
    networks:
      - dp-network
    ports:
      - 9864:9864
    volumes:
      - hadoop_datanode-1:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env

  # datanode-2:
  #   image: salimelakoui/hadoop-datanode:latest-salim
  #   depends_on: 
  #     - namenode
  #   networks:
  #     - dp-network
  #   ports:
  #     - 9865:9864
  #   volumes:
  #     - hadoop_datanode-2:/hadoop/dfs/data
  #   environment:
  #     SERVICE_PRECONDITION: "namenode:9870"
  #   env_file:
  #     - ./hadoop.env

  resourcemanager:
    image: salimelakoui/hadoop-resourcemanager:latest-salim
    container_name: resourcemanager
    depends_on: 
      - namenode
    networks:
      - dp-network
    ports:
      - 8088:8088
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env

  nodemanager-1:
    image: salimelakoui/hadoop-nodemanager:latest-salim
    depends_on: 
      - resourcemanager
    networks:
      - dp-network
    ports:
      - 8044:8042
    environment:
      SERVICE_PRECONDITION: "resourcemanager:8088"
      NODE_MANAGER_HOST: "localhost"
      NODE_MANAGER_PORT: "8044"
    env_file:
      - ./hadoop.env

  # nodemanager-2:
  #   image: salimelakoui/hadoop-nodemanager:latest-salim
  #   depends_on: 
  #     - resourcemanager
  #   networks:
  #     - dp-network
  #   ports:
  #     - 8043:8042
  #   environment:
  #     SERVICE_PRECONDITION: "resourcemanager:8088"
  #     NODE_MANAGER_HOST: "localhost"
  #     NODE_MANAGER_PORT: "8043"
  #   env_file:
  #     - ./hadoop.env

  historyserver:
    image: salimelakoui/hadoop-historyserver:latest-salim
    container_name: historyserver
    depends_on: 
      - resourcemanager
      - namenode
    networks:
      - dp-network
    ports:
      - 8188:8188
    environment:
      SERVICE_PRECONDITION: "resourcemanager:8088"
      PRE_CMD_1: "hdfs dfs -mkdir -p /spark-logs"
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./hadoop.env

  hive-server:
    image: salimelakoui/hive-server:latest-salim
    depends_on: 
      - resourcemanager
      - namenode
      - hive-postgresql
    networks:
      - dp-network
    env_file:
      - ./hadoop.env
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    ports:
      - "10000:10000"

  hive-metastore:
    image: salimelakoui/hive-server:latest-salim
    depends_on: 
      - hive-server
    networks:
      - dp-network
    env_file:
      - ./hadoop.env
    command: hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:9870 hive-postgresql:5432"
      PRE_CMD_1: "/apps/hive/bin/schematool -dbType postgres -initSchema -verbose"
      PRE_CMD_2: "/apps/hive/bin/schematool -dbType postgres -upgradeSchema -verbose"
    ports:
      - "9083:9083"

  hive-postgresql:
    image: postgres:9.5.3
    volumes:
       - hive-postgresql-data:/data/postgres
    environment:
      POSTGRES_DB: "metastore"
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "postgres"
    networks:
      - dp-network

  hive-pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "salim.elakoui@nway.org"
      PGADMIN_DEFAULT_PASSWORD: "salim"
    volumes:
      - hive-postgresql-admin:/root/.pgadmin
    ports:
      - "5050:80"
    networks:
      - dp-network

  hue-mysql:
    image: mysql:5.7
    command: --init-file /data/application/init.sql
    volumes:
      - hue-mysql-data:/var/lib/mysql
      - ./others/hue/init.sql:/data/application/init.sql
    networks:
      - dp-network
    environment:
      MYSQL_ROOT_USER: "root"
      MYSQL_ROOT_PASSWORD: "secret"
      MYSQL_DATABASE: "hue"
      MYSQL_USER: "root"
      MYSQL_PASSWORD: "secret"

  hue-server:
    image: gethue/hue:latest
    depends_on: 
      - resourcemanager
      - namenode
      - hue-mysql
    ports:
      - "8888:8888"
    volumes:
      - ./others/hue/conf/z-hue-overrides.ini:/usr/share/hue/desktop/conf/z-hue-overrides.ini
    networks:
      - dp-network

  # presto-coordinator:
  #   image: shawnzhu/prestodb:0.181
  #   ports:
  #     - "8080:8080"

  # spark-master:
  #   image: salimelakoui/spark-master:latest-salim
  #   container_name: spark-master
  #   depends_on: 
  #     - resourcemanager
  #     - namenode
  #   networks:
  #     - dp-network
  #   ports:
  #     - "8080:8080"
  #     - "7077:7077"
  #   environment:
  #     INIT_DAEMON_STEP: "setup_spark"
  #     SERVICE_PRECONDITION: "namenode:9870"
  #   env_file:
  #     - ./hadoop.env

  # spark-worker-1:
  #   image: salimelakoui/spark-worker:latest-salim
  #   depends_on: 
  #     - spark-master
  #   networks:
  #     - dp-network
  #   ports:
  #     - "8082:8081"
  #   environment:
  #     SERVICE_PRECONDITION: "spark-master:7077"
  #   env_file:
  #     - ./hadoop.env

  # spark-worker-2:
  #   image: salimelakoui/spark-worker:latest-salim
  #   depends_on: 
  #     - spark-master
  #   networks:
  #     - dp-network
  #   ports:
  #     - "8083:8081"
  #   environment:
  #     SERVICE_PRECONDITION: "spark-master:7077"
  

  # zeppelin:
  #   image: salimelakoui/zeppelin:latest-salim
  #   ports:
  #     - 8000:8080
  #   environment:
  #     CORE_CONF_fs_defaultFS: "hdfs://namenode:8020"
  #     SPARK_MASTER: "spark://spark-master:7077"
  #     MASTER: "spark://spark-master:7077"
  #   env_file:
  #     - ./hadoop.env

networks:
  dp-network:

volumes:
  hadoop_namenode:
  hadoop_datanode-1:
  hadoop_datanode-2:
  hadoop_datanode-3:
  hadoop_historyserver:
  hive-postgresql-data:
  hive-postgresql-admin:
  hue-mysql-data: